<apex:page controller="Dashboardcntrltryjuly19" showHeader="false" standardStylesheets="false">

 <apex:stylesheet value="{!URLFOR($Resource.QRCode_CSS,"css/screen.css")}"/> 



<style>
x-grid3-hd-inner x-grid3-hd-GlobalNestEM__Event_Title__c{
background-color: #FFFFFF;
}
</style>


<!-- Start: page-top-outer -->
<div id="page-top-outer">    

<!-- Start: page-top -->
<div id="page-top">

    <!-- start logo -->
    <div id="logo">
   
      
    </div>
    <!-- end logo -->
    
    <!--  start top-search -->  
    <div id="top-search">
        <table border="0" cellpadding="0" cellspacing="0">  
        <tr>
        <td class="welcome">  
        
       
        
        <font>Welcome  :</font> 
                   <b><font size="2" color="Sky Blue">{!$User.Firstname}&nbsp;{!$User.Lastname}    </font></b>
        
       </td>
        
        
        
        </tr>
        </table>
    </div>
    <!--  end top-search -->
    <div class="clear"></div>

</div>
<!-- End: page-top -->

</div>
<!-- End: page-top-outer -->
    
<div class="clear">&nbsp;</div>
 


<!--  start nav-outer-repeat................................................................................................. START -->
<div class="nav-outer-repeat"> 
<!--  start nav-outer -->
<div class="nav-outer"> 

<!-- Start Nav Right-->
        <div id="nav-right">
        
               
           <!----LOGOUT ACTION -->
           <div class="nav">
        <div class="table">
        
       <apex:form >
      
        <div class="nav-divider">&nbsp;</div>
        <apex:commandLink action="{!profileaction}"  style="text-style:bold; color:#FFFFFF; padding:10px 15px 0 0;">Profile</apex:commandLink>
        <div class="nav-divider">&nbsp;</div>
        <apex:commandLink action="{!$Site.Prefix}/secur/logout.jsp" rendered="{!NOT(ISPICKVAL($User.UserType,'Guest'))}" style="text-style:bold; color:#FFFFFF; padding:10px 15px 0 0;">{!$Label.site.logout}</apex:commandLink>
        </apex:form>

            </div></div>
           
           <!----LOGOUT ACTION END--->
           
           
            <div class="clear">&nbsp;</div>
        
            <!--  start account-content --> 
            <div class="account-content">
            <div class="account-drop-inner">
                <a href="" id="acc-settings">Settings</a>
                <div class="clear">&nbsp;</div>
                <div class="acc-line">&nbsp;</div>
                <a href="" id="acc-details">Personal details </a>
                <div class="clear">&nbsp;</div>
                <div class="acc-line">&nbsp;</div>
                <a href="" id="acc-project">Project details</a>
                <div class="clear">&nbsp;</div>
                <div class="acc-line">&nbsp;</div>
                <a href="" id="acc-inbox">Inbox</a>
                <div class="clear">&nbsp;</div>
                <div class="acc-line">&nbsp;</div>
                <a href="" id="acc-stats">Statistics</a> 
            </div>
            </div>
            <!--  end account-content -->
        
        </div>
        <!-- end nav-right -->


        <!--  start nav -->
        <div class="nav">
        <div class="table">
        
       
        
        <div class="nav-divider">&nbsp;</div>
                            
        <ul class="select"><li>
        <apex:form >
        <apex:commandLink action="{!EventAction}"><b>Events</b></apex:commandLink>
        </apex:form>
      
        </li>
        </ul>
        
        
        
        <div class="nav-divider">&nbsp;</div>
        
        <ul class="select"><li>
        <apex:form >
        <apex:commandlink action="{!Customeraction}"><b>Booth Admin</b></apex:commandlink>
        </apex:form>
       
        </li>
        </ul>
        <div class="nav-divider">&nbsp;</div>
        
        <ul class="select"><li>
        <apex:form >
        <apex:commandLink action="{!AttendeesAction}" ><b>Leads </b> </apex:commandLink>
        </apex:form>
       
        </li>
        </ul>
        
        
        
        <div class="nav-divider">&nbsp;</div>
        
        <ul class="current"><li><apex:form ><apex:commandlink action="{!Reportsaction}"><b>Reports</b></apex:commandlink></apex:form>
        
        </li>
        </ul>
        
      
        
        
        <div class="clear"></div>
        </div>
        <div class="clear"></div>
        </div>
        <!--  start nav -->
        

</div>
<div class="clear"></div>
<!--  start nav-outer -->
</div>
<!--  start nav-outer-repeat................................................... END -->

 <div class="clear"></div>

 <div id="page-heading">
    <apex:form >
       <h1><b>Events</b></h1>  
       <apex:selectList value="{!eventSelected}" multiselect="false" size="1">
       <apex:selectOptions value="{!items}"/>
       <apex:actionSupport action="{!getEvents}" event="onchange"/> 
       </apex:selectList> </apex:form> 
    </div>
      



 <apex:form >

  <script type="text/javascript" charset="utf-8" src="http://cdn.sencha.io/ext-4.0.7-gpl/ext-all.js"></script>
  <link rel="stylesheet" type="text/css" href="http://cdn.sencha.io/ext-4.0.7-gpl/resources/css/ext-all.css"/>
 
  
 <head>
  <style > 
  
   .report-icon
   {
    background:url(http://cdn1.iconfinder.com/data/icons/humano2/24x24/apps/gnumeric.png) no-repeat top left; 
    padding-right: 25px;
    padding-bottom: 25px;
   }  
  
   .chart-icon
   {
    background:url(http://png-2.findicons.com/files//icons/1581/silk/16/chart_curve_error.png) no-repeat; 
   }


   .geo-icon
   {
    background:url(http://cdn1.iconfinder.com/data/icons/realistiK-new/16x16/apps/package_network.png) no-repeat; 
    padding-top:17px;
   } 
    .ind-icon
   {
    background:url(http://cdn1.iconfinder.com/data/icons/REALVISTA/project_managment/png/16/agency.png) no-repeat; 
    padding-top:17px;
   }  
  

   .grid-icon
   {
    background:url(http://nnnpro.com/sites/all/themes/nnnproV1/images/icon-grid.png) no-repeat;    
   }
  </style>
 </head> 
 
 
<script type="text/javascript">  

Ext.require('Ext.chart.*');  
Ext.require('Ext.grid.*');  
Ext.onReady(function ()  
{


      // Geography report store
      
      var myData1=new Array();
        
      <apex:repeat value="{!indusreport}" var="row">   
      
          var rowArray=new Array();
          rowArray[0]=  '{!row.id}';
          var RName ="{!row.AS_id__r.AS_FirstName__c}";
          rowArray[1]=  RName.replace(/\'/g,'\'');   
          var lName ="{!row.AS_id__r.AS_Company__c}"; 
            rowArray[2]=  lName.replace(/\'/g,'\''); 
            var sName ="{!row.AS_id__r.AS_WorkState__c}"; 
            rowArray[3]=  sName.replace(/\'/g,'\''); 
             rowArray[4]=  '{!row.AS_id__r.AS_CellPhone__c}';
              var eName ="{!row.AS_id__r.AS_Email__c}"; 
            rowArray[5]=  eName.replace(/\'/g,'\''); 
          myData1.push(rowArray);          
         
     </apex:repeat>   
   
     
    var storegrid = new Ext.data.SimpleStore(
    {
       fields:[{name:'id'},{name:'AS_id__r.AS_FirstName__c'},{name:'AS_id__r.AS_Company__c'},{name:'AS_id__r.AS_WorkState__c'},{name:'AS_id__r.AS_CellPhone__c'},{name:'AS_id__r.AS_Email__c'}]} 
    );
        storegrid.loadData(myData1); 
     
 
  // Industry grid store

   var myData2=new Array();
        
      <apex:repeat value="{!indusgridreport}" var="row">   
      
          var rowArray=new Array();
          rowArray[0]=  '{!row.id}';
          var yName ="{!row.AS_id__r.AS_FirstName__c}";
          rowArray[1]=  yName.replace(/\'/g,'\'');   
          var uName ="{!row.AS_id__r.AS_Company__c}"; 
          rowArray[2]=  uName.replace(/\'/g,'\''); 
          var iName ="{!row.AS_id__r.AS_PrimaryBusinessCategory1__c}"; 
          rowArray[3]=  iName.replace(/\'/g,'\''); 
          rowArray[4]=  '{!row.AS_id__r.AS_CellPhone__c}';
          var oName ="{!row.AS_id__r.AS_Email__c}"; 
          rowArray[5]=  oName.replace(/\'/g,'\''); 
          myData2.push(rowArray);          
         
     </apex:repeat>   
   
     
    var storeindusgrid = new Ext.data.SimpleStore( 
    {
       fields:[{name:'id'},{name:'AS_id__r.AS_FirstName__c'},{name:'AS_id__r.AS_Company__c'},{name:'AS_id__r.AS_PrimaryBusinessCategory1__c'},{name:'AS_id__r.AS_CellPhone__c'},{name:'AS_id__r.AS_Email__c'}]} 
    );
        storeindusgrid.loadData(myData2); 
     

 
  // geography chart store 
  
   var store = Ext.create('Ext.data.JsonStore', {  
       fields: ['namegeo', 'datageo'], 
       data: [
       <apex:repeat value="{!grphy}" var="a"> 
       {
        'namegeo' : '{!a.geogy}',  
        'datageo' :{!a.georecords}
       }, 
       </apex:repeat>  
     ]
  });
  
  
  // device usage store 
  
   
   var iosstore = Ext.create('Ext.data.JsonStore', {  
       fields: ['nameios', 'dataios'], 
       data: [
       <apex:repeat value="{!iosdevice}" var="u"> 
       {
        'nameios' : '{!u.iosname}',  
        'dataios' :{!u.iosrecords}
       }, 
       </apex:repeat>  
     ]
  });
  
   // Industry chart store
 
    var store1 = Ext.create('Ext.data.JsonStore', { 
    fields: ['nameindus', 'dataI'],
    data: [
    <apex:repeat value="{!indus}" var="a">
    {
    'nameindus' : '{!a.industry}',  
    'dataI' :{!a.indusrec}
    },
    </apex:repeat>
    ]
 });
  
  
  
  
  // sample example store
  
  
  var atstore = Ext.create('Ext.data.Store', {
    fields: ['scans', 'date'],
    data: [
        { scans: 10, date: '9am' },
        { scans: 38, date: '10am' },
        { scans: 63, date: '11am' },
        { scans: 35, date: '12Noon' },
        { scans: 25, date: '1pm' },
        { scans: 20, date: '2pm' },
        { scans: 15, date: '3pm' },
        { scans: 15, date: '4pm' },
        { scans: 5, date: '5pm' }
    ]
 });
  
  
  
  
  
  
  
   var devstore = Ext.create('Ext.data.Store', { 
    fields: ['name', 'data'],
    data: [
        { 'name': 'Apple', 'data': 7 },
        { 'name': 'Android', 'data':  10 } 
    ]
 });
  
  
  
    Ext.create('Ext.data.Store', {  
    storeId:'simpsonsStore',
    fields:['name', 'email', 'phone'],
    data:{'items':[
        { 'name': 'Lisa',  "email":"lisa@simpsons.com",  "phone":"555-111-1224"  },  
        { 'name': 'Bart',  "email":"bart@simpsons.com",  "phone":"555-222-1234"  }, 
        { 'name': 'Homer', "email":"home@simpsons.com",  "phone":"555-222-1244"  }, 
        { 'name': 'Marge', "email":"marge@simpsons.com", "phone":"555-222-1254"  } 
    ]},
    proxy: {
        type: 'memory',
        reader: {
            type: 'json',
            root: 'items'
        }
    }
});
 

 
 // navigate function
 
 var navigate = function(panel,direction){ 
  
    var layout = panel.getLayout(); 
    layout[direction](); 
    Ext.getCmp('chartid').setDisabled(!layout.getPrev());  
    Ext.getCmp('gridid').setDisabled(!layout.getNext());   
 
};
 
 // Panel Start
 
 Ext.create('Ext.Panel', { 
    width: 1000,  
    height: 770,  
     iconCls: 'report-icon',   
    title: 'Reports Dashboard',  
     defaults: 
    {
      bodyStyle: 'padding:14px' 
    },      
    renderTo: document.body,         
    layout: 
    {
     type: 'table', 
     columns: 3,
     tableAttrs: {
            style: { 
            
                width: '100%', 
                height: '100%', 
              
            }
        }
    },
    defaults: 
    {
      bodyStyle: 'padding:4px' 
    },
    items: [{
       
        title: '',
        border:false,
        columnWidth:0.050,
        rowspan:2
    
    },
  
  // 1 panel start
  
    {
    xtype: 'panel',    
    title: 'Geography Chart', 
    width: 480,
    height: 350,
     iconCls : 'geo-icon',
    closeAction: 'hide',
    renderTo: Ext.getBody(), 
   
    layout: 'card', 
    tbar: [
 
    { 
    xtype: 'tbspacer', 
    width: 400
    },
    {
     xtype : 'button', 
     id:'chartid',
     iconCls : 'chart-icon', 
    
     width : 25, 
     height : 25, 
   handler: function(btn) {
                navigate(btn.up("panel"), "prev");
            },
            disabled: true 
    
    },
    {
     xtype:'tbseparator' 
    },
    {
     xtype : 'button', 
     text : null, 
     id:'gridid', 
     iconCls : 'grid-icon', 
     layout: 'autofit', 
     width : 25, 
     height : 25, 
    handler: function(btn) { 
                navigate(btn.up("panel"), "next"); 
            }

         }
         
         ],
    items: 
   [{
        xtype: 'chart', 
        id: 'chartCmp',
        animate: false,
        store: store,
        align:'center',
        shadow: true, 
        legend: {
            position: 'right'
        },
        insetPadding: 60, 
        theme: 'Base:gradients', 
        series: [{
            type: 'pie',  
            width:150,
         
            field: 'datageo',   
            showInLegend: true,  
            tips: {
              trackMouse: true,    
              width: 280,   
              height: 50,  
              renderer: function(storeItem, item) {   
                //calculate percentage.  
                var total = 0;
                store.each(function(rec) {  
                    total += rec.get('datageo');       
                }); 
                
                 this.setTitle(storeItem.get('namegeo') + ' : ' + storeItem.get('datageo') +  '-Attendees');       
              }
            },
            highlight: {  
              segment: { 
                margin: 20  
              } 
            }, 
            label: { 
                field: 'namegeo', 
                display: 'rotate', 
                contrast: true, 
                font: '15px Arial'  
            }
      }],
    },

  {
     xtype:'grid',  
     width: 480, 
     height: 350, 
     
     closeAction: 'hide', 
     renderTo: Ext.getBody(),  
     title: 'Geograpy Report', 
     id:'gridpanel', 
   
        store: storegrid,
        columns: [
            {header:'id', dataIndex: 'id',hidden:true }, 
        { header: 'Name',  dataIndex: 'AS_id__r.AS_FirstName__c' }, 
         { header: 'Phone',  dataIndex: 'AS_id__r.AS_CellPhone__c' }, 
        { header: 'E-Mail', dataIndex: 'AS_id__r.AS_Email__c', flex:1},    
        { header: 'State', dataIndex: 'AS_id__r.AS_WorkState__c'}
        ],
      
  
  }],

    
   } ,

// 1 panel end
 
 
 
 // 2 panel start
   
 {
    xtype: 'panel',
    title: 'Industry Chart',
    id:'panel1',   
    width: 480,
    height: 350,
   
   iconCls: 'ind-icon',
    tools:[{
     type:'minimize'
    },
    {
     type:'Close'
    }],
    renderTo: Ext.getBody(),
    layout: 'card',
    activeItem: 'chartcmp1',
    tbar: [
    { 
    xtype: 'tbspacer', 
    width: 335
    },
    {
     xtype : 'button',  
     text : null,
     iconCls : 'chart-icon', 
     id:'induschartid',
     layout: 'autofit',
     width : 25,
     height : 25,
     handler: function(btn) 
          {
              var panel2 = Ext.getCmp ('panel1');
              panel2.getLayout().setActiveItem ('chartcmp1');
          },
    
    },
    {
     xtype:'tbseparator'
    },
    {
     xtype : 'button',
     text : null,
     id:'indusgridid',
     iconCls : 'grid-icon',
     layout: 'autofit',
     width : 25,
     height : 25,
    handler: function(btn) 
         {
             var panel2 = Ext.getCmp ('panel1');
             panel2.getLayout().setActiveItem ('gridpanel1');
          }
     
     }],
     items: [{
      xtype: 'chart',
      id:'chartcmp1',
      animate: true,
      shadow: true,
      store: store1,
      axes: [{
         type: 'Numeric',
         position: 'left',
         fields: ['dataI'],
         title: false,
         grid: true,
         minimum: 0,
         maximum: 900
      }, {
          type: 'Category',
          position: 'bottom',
          fields: ['nameindus'],
          title: false
    }],
     series: [{
        type: 'column',
        axis: 'left',
        gutter: 80,
        xField: 'nameindus',
        yField: ['dataI'],
          tips: {
          trackMouse: true,
          width: 280,
          height: 80,
          renderer: function(storeItem, item) 
          {
           this.setTitle(storeItem.get('nameindus') + ': ' + storeItem.get('dataI') + '-Attendees ');   
          }      
        },   
       }]  
      },   
      
        {  
     xtype:'grid',    
     width: 480,   
     height: 350,   
     
     closeAction: 'hide',   
     renderTo: Ext.getBody(),   
     title: 'Industry Report',   
     id:'gridpanel1',   
   
        store: storeindusgrid,  
        columns: [
              {header:'id', dataIndex: 'id',hidden:true },   
              { header: 'Name',  dataIndex: 'AS_id__r.AS_FirstName__c' },   
                { header: 'Company',  dataIndex: 'AS_id__r.AS_Company__c' }, 
                { header: 'Industry', dataIndex: 'AS_id__r.AS_PrimaryBusinessCategory1__c'},  
              { header: 'Phone',  dataIndex: 'AS_id__r.AS_CellPhone__c' }, 
              { header: 'E-Mail', dataIndex: 'AS_id__r.AS_Email__c'}      
            
        ],
      
  
  }],
   
   },
  // 2 panel end
 
 
 
 
 
 // 3 panel start 
    
    {
xtype: 'panel',  
title: 'Hourly Scans (Event/Attendee Activity)', 
width: 480,
height: 350,
iconCls: 'scan-icon',
draggable: true, 
layout: 'fit',
renderTo: Ext.getBody(),
tools:[{
type: 'gear',
handler: function(e, target, panelHeader, tool)
{
var por = panelHeader.ownerCt;
por.setLoading('Refreshing Data...');
Ext.defer(function() 
{
por.setLoading(false);
}, 2000);
}
}
],
items: 
{
xtype: 'chart',
id: 'linechart',
animate: true,
store: atstore,
theme: 'Green',
align:'center',
axes: [
{
title: 'No. of Scans',
type: 'Numeric',
position: 'left',
fields: ['scans'],
minimum: 0,
maximum: 100,

},
{
title: 'Timeline',
type: 'Category',
position: 'bottom',
fields: ['date']
}
],
series: [
{
type: 'line',
xField: 'date',
yField: 'scans',
fill: true,
}
]
}
},

 // 3 panel end
  
  
  
     
 // 4 panel start
       
 {
xtype: 'panel',
title: 'Device Usage (Apple vs Android)',    
width: 480,
height: 350,
iconCls: 'dev-icon',
draggable: true,
renderTo: Ext.getBody(),
layout: 'card',
tools:[{
type: 'gear',
handler: function(e, target, panelHeader, tool)
{
var por = panelHeader.ownerCt;
por.setLoading('Refreshing Data...');
Ext.defer(function() 
{
por.setLoading(false);
}, 2000);
}
}
],
items: [
{
xtype: 'chart',
id:'devchart',
animate: true,
store: iosstore,
shadow: true,
theme: 'Base',
series: [{
type: 'pie',
angleField: 'dataios',
showInLegend: true,
legend: 
{
position: 'top'
},
tips: 
{
trackMouse: true,
width: 130,
height: 60,
renderer: function(storeItem, item) 
{
var total = 0;
devstore.each(function(rec) 
{
total += rec.get('dataios');
});
 this.setTitle(storeItem.get('nameios') + ' : ' + storeItem.get('dataios') +  '- Users');   
}
},
highlight: 
{
segment: 
{
margin: 20
}
},
label: 
{
field: 'nameios',
display: 'rotate',
contrast: true,
font: '18px Arial'
}
}]
}]

}
 
 // 4 panel end
 
  
  
  
   ] 
  }); 
   
});

</script>


</apex:form>
</apex:page>